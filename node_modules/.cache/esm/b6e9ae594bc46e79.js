let Router,fetchMovies,fetchMovieByID,updateMovieRating,addNewMovie,AccessControlMiddleware,UserMiddleware,schema;_4bc‍.x([["default",()=>_4bc‍.o]]);_4bc‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_4bc‍.w("../controllers/movie.controller",[["fetchMovies",["fetchMovies"],function(v){fetchMovies=v}],["fetchMovieByID",["fetchMovieByID"],function(v){fetchMovieByID=v}],["updateMovieRating",["updateMovieRating"],function(v){updateMovieRating=v}]]);_4bc‍.w("../controllers/super.controller.js",[["addNewMovie",["addNewMovie"],function(v){addNewMovie=v}]]);_4bc‍.w("../middlewares/accessControl",[["default",["AccessControlMiddleware"],function(v){AccessControlMiddleware=v}]]);_4bc‍.w("../middlewares/user.js",[["default",["UserMiddleware"],function(v){UserMiddleware=v}]]);_4bc‍.w("../validations/schema.js",[["default",["schema"],function(v){schema=v}]]);











const { isTriUser, isBiUser, isActive } = AccessControlMiddleware;
const { validate, authenticate } = UserMiddleware;
const { addMovieSchema } = schema;

const router = Router();

router.get("/", fetchMovies);
router.get("/:id", fetchMovieByID);
router.put("/rating", [authenticate, isTriUser, isActive], updateMovieRating);
router.post(
  "/add-movie",
  validate(addMovieSchema),
  [authenticate, isBiUser],
  addNewMovie
);

_4bc‍.d(router);
