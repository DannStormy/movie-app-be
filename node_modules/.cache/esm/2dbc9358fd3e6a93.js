let Helper,SuperService;_fd3‍.x([["superLogin",()=>superLogin],["fetchUsers",()=>fetchUsers]]);_fd3‍.w("../utils/helpers/helpers",[["default",["Helper"],function(v){Helper=v}]]);_fd3‍.w("../services/super.service",[["default",["SuperService"],function(v){SuperService=v}]]);


const { generateJWT } = Helper;
const { fetchAllUsers } = SuperService;

const superLogin = async (req, res) => {
  try {
    const data = { superID: req.user.id, role: "super" };
    let token = await generateJWT(data);
    delete req.user.password;
    return res.status(200).json({
      message: "login successful",
      data: { ...token, user: req.user },
    });
  } catch (error) {
    _fd3‍.g.console.log(error);
    return error;
  }
};

const fetchUsers = async (req, res) => {
  try {
    const users = await fetchAllUsers();
    return res.status(200).json({
      message: "users fetched",
      data: users,
    });
  } catch (error) {
    _fd3‍.g.console.log(error);
    return error;
  }
};


