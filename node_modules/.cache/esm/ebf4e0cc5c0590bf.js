let bcrypt,db,user_queries;_5c0‍.x([["default",()=>UserService]]);_5c0‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);_5c0‍.w("../config/config",[["default",["db"],function(v){db=v}]]);_5c0‍.w("../queries/user_queries",[["default",["user_queries"],function(v){user_queries=v}]]);




const { registerUser, loginUser, findUserByEmail } = user_queries;

               class UserService {
    /**
     * register new user
     * @memberof User
     */
    static async addUser(data) {
        let { firstName, lastName, email, password } = data;
        password = bcrypt.hashSync(password, 10);
        return db.none(registerUser, [firstName, lastName, email, password]);
    }

/**
* get user by email
* @memberof User
*/
    static async getUserByEmail(email) {
    return db.oneOrNone(findUserByEmail, [email]);
}

    /**
     * login user
     * @memberof User
     */
    static async loginUser(data) {
        let { email, password } = data;
        return db.any(loginUser, [email, password])
    }
}
