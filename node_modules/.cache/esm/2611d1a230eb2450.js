let db,public_queries,Helper;_30e‍.x([["default",()=>MovieService]]);_30e‍.w("../config/config",[["default",["db"],function(v){db=v}]]);_30e‍.w("../queries/movie.queries",[["default",["public_queries"],function(v){public_queries=v}]]);_30e‍.w("../utils/helpers/helpers",[["default",["Helper"],function(v){Helper=v}]]);



const {fetchResourceByPage, calcPages} = Helper
const { fetchAllMovies, searchMovieQuery, fetchMovieByID, fetchMoviesCount } = public_queries;

               class MovieService {
  /**
   * fetch all movies
   * @memberof MovieService
   */
  static async fetchAllMovies({ page = 1, limit = 10 }) {
    const [total, result] = await fetchResourceByPage({
      page,
      limit,
      getCount: fetchMoviesCount, //query to count all movies
      getResources: fetchAllMovies //query to get all the movies
     });

    return {
      total: +total.count,
      currentPage: +page,
      totalPages: calcPages(total.count, limit),
      result
    };
  }

  /**
   * fetch movies by name, genre, year
   * @memberof MovieService
   */
  static async fetchMovieByQuery(query) {
    const { title, year, genre } = query;
    return db.any(searchMovieQuery, [`%${title}%`, year, `%${genre}`]);
  }
}
