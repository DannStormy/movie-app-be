let Router,fetchMovies,fetchMovieByID,updateMovieRating,addNewMovie,deleteMovie,movieReview,ratingEdit,titleEdit,reviewEdit,AccessControlMiddleware,AuthMiddleware,schema;_da0‍.x([["default",()=>_da0‍.o]]);_da0‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_da0‍.w("../controllers/movie.controller",[["fetchMovies",["fetchMovies"],function(v){fetchMovies=v}],["fetchMovieByID",["fetchMovieByID"],function(v){fetchMovieByID=v}],["updateMovieRating",["updateMovieRating"],function(v){updateMovieRating=v}],["addNewMovie",["addNewMovie"],function(v){addNewMovie=v}],["deleteMovie",["deleteMovie"],function(v){deleteMovie=v}],["movieReview",["movieReview"],function(v){movieReview=v}],["ratingEdit",["ratingEdit"],function(v){ratingEdit=v}],["titleEdit",["titleEdit"],function(v){titleEdit=v}],["reviewEdit",["reviewEdit"],function(v){reviewEdit=v}]]);_da0‍.w("../middlewares/accessControl",[["default",["AccessControlMiddleware"],function(v){AccessControlMiddleware=v}]]);_da0‍.w("../middlewares/auth.middleware",[["default",["AuthMiddleware"],function(v){AuthMiddleware=v}]]);_da0‍.w("../validations/schema.js",[["default",["schema"],function(v){schema=v}]]);















const { isBiUser, isUser, isSuper, isActive } = AccessControlMiddleware;
const { validate, authenticate } = AuthMiddleware;
const {
  addMovieSchema,
  reviewMovieSchema,
  editTitleSchema,
  editRatingSchema,
  editReviewSchema,
} = schema;

const router = Router();

router.get("/", fetchMovies);
router.get("/:id", fetchMovieByID);

router.use(authenticate);
router.put("/rating", [authenticate, isActive], updateMovieRating);
router.post(
  "/add-movie",
  validate(addMovieSchema),
  [authenticate, isBiUser, isActive],
  addNewMovie
);
router.post(
  "/review-movie",
  validate(reviewMovieSchema),
  [authenticate, isUser],
  movieReview
);
router.patch(
  "/edit-title/:id",
  validate(editTitleSchema),
  [authenticate, isSuper],
  titleEdit
);
router.patch(
  "/edit-review/:id",
  validate(editReviewSchema),
  [authenticate, isBiUser, isActive],
  reviewEdit
);
router.patch(
  "/edit-rating/:id",
  validate(editRatingSchema),
  [authenticate, isBiUser, isActive],
  ratingEdit
);
router.delete("/delete/:id", [authenticate, isBiUser, isActive], deleteMovie);

_da0‍.d(router);
