let Joi;_2e2‍.x([["default",()=>ValidationHelper]]);_2e2‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);

/**
 * contains validation helpers
 *
 * @class ValidationHelper
 */
               class ValidationHelper {
    /**
     * validates emails
     * @static
     * @memberof ValidationHelper
     * @returns {Boolean}
     */
    static emailCheck() {
        return Joi.string().email().lowercase().required()
            .messages({
                'any.required': 'Email is a required field',
                'string.email': 'Email is not valid',
                'string.empty': 'Email cannot be an empty field'
            });
    }

    /**
     * validates passwords
     * @static
     * @memberof ValidationHelper
     * @returns {Boolean}
     */
    static passwordCheck() {
        return Joi.string().trim().required().min(7)
            .messages({
                'string.base': 'Password must be a string',
                'string.empty': 'Password field cannot be empty',
                'any.required': 'Password field is required',
                'string.min': 'Password cannot be less than 7 characters'
            });
    }

    /**
     * validates strings
     * @static
     * @memberof ValidationHelper
     * @returns {Boolean}
     */
    static stringCheck(param, min = 1, max = 120) {
        return Joi
            .string()
            .required()
            .trim()
            .min(min)
            .max(max)
            .messages({
                'any.required': `${param} is a required field`,
                'string.max': `${param} can not be greater than ${max} characters`,
                'string.min': `${param} can not be lesser than ${min} characters`,
                'string.base': `${param} must be a string`,
                'string.empty': `${param} cannot be an empty field`,
            });
    }
}